name: Build and deploy backend container

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'render.yaml'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/leetcode-automation-api
    outputs:
      image: ${{ steps.meta.outputs.image }}
      has-render-secrets: ${{ steps.render-secrets.outputs.present }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Render credentials
        id: render-secrets
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          if [[ -n "$RENDER_SERVICE_ID" && -n "$RENDER_API_KEY" ]]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Export image reference
        id: meta
        run: echo "image=${IMAGE_NAME}@${{ steps.build.outputs.digest }}" >> "$GITHUB_OUTPUT"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
    if: ${{ needs.build-and-push.outputs.image != '' && needs.build-and-push.outputs.has-render-secrets == 'true' }}
    steps:
      - name: Trigger Render deploy
        env:
          IMAGE_URL: ${{ needs.build-and-push.outputs.image }}
        run: |
          curl -X POST \
            "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "{\"clearCache\":false,\"serviceId\":\"${RENDER_SERVICE_ID}\",\"image\":{\"url\":\"${IMAGE_URL}\"}}"

